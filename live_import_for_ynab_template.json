{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "BudgetId": {
      "Description": "YNAB budget id",
      "Type": "String"
    },
    "Domain": {
      "Description": "Domain that receives transaction emails (example.com)",
      "Type": "String"
    },
    "PersonalAccessToken": {
      "Description": "YNAB API personal access token",
      "Type": "String"
    }
  },
  "Resources": {
    "emailsBucketPolicy": {
      "Properties": {
        "Bucket": {
          "Ref": "transactionEmails"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "aws:Referer": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "ses.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "transactionEmails"
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "AllowSESPuts"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "invokeAlliantLambda": {
      "DependsOn": [
        "liveImportForYnabRuleSet"
      ],
      "Properties": {
        "After": {
          "Ref": "saveEmail"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseAlliantEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-alliant-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "alliantynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeAlliantLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseAlliantEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "invokeAssociatedLambda": {
      "DependsOn": [
        "liveImportForYnabRuleSet"
      ],
      "Properties": {
        "After": {
          "Ref": "invokeAlliantLambda"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseAssociatedEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-associated-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "associatedynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeAssociatedLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseAssociatedEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "invokeChaseLambda": {
      "DependsOn": [
        "liveImportForYnabRuleSet"
      ],
      "Properties": {
        "After": {
          "Ref": "invokeAssociatedLambda"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseChaseEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-chase-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "chaseynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeChaseLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseChaseEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "invokeCitiLambda": {
      "DependsOn": [
        "liveImportForYnabRuleSet"
      ],
      "Properties": {
        "After": {
          "Ref": "invokeDiscoverLambda"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseCitiEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-citi-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "citiynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeCitiLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseCitiEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "invokeDiscoverLambda": {
      "Properties": {
        "After": {
          "Ref": "invokeChaseLambda"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseDiscoverEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-discover-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "discoverynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeDiscoverLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseDiscoverEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "invokeUSBankLambda": {
      "Properties": {
        "After": {
          "Ref": "invokeWellsFargoLambda"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseUSBankEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-us-bank-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "usbankynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeUSBankLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseUSBankEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "invokeWellsFargoLambda": {
      "DependsOn": [
        "liveImportForYnabRuleSet"
      ],
      "Properties": {
        "After": {
          "Ref": "invokeCitiLambda"
        },
        "Rule": {
          "Actions": [
            {
              "LambdaAction": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "parseWellsFargoEmail",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "invoke-wells-fargo-lambda",
          "Recipients": [
            {
              "Fn::Join": [
                "",
                [
                  "wellsfargoynab@",
                  {
                    "Ref": "Domain"
                  }
                ]
              ]
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "invokeWellsFargoLambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "parseWellsFargoEmail"
        },
        "Principal": "ses.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "liveImportForYnabRuleSet": {
      "Properties": {
        "RuleSetName": "live-import-for-ynab-rule-set"
      },
      "Type": "AWS::SES::ReceiptRuleSet"
    },
    "parseAlliantEmail": {
      "Properties": {
        "Code": "lambda_functions/parseAlliantEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseAlliantEmail",
        "Handler": "parseAlliantEmail.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseAssociatedEmail": {
      "Properties": {
        "Code": "lambda_functions/parseAssociatedEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseAssociatedEmail",
        "Handler": "parseAssociatedEmail.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseChaseEmail": {
      "Properties": {
        "Code": "lambda_functions/parseChaseEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseChaseEmail",
        "Handler": "parseChaseEmail.lambda_handler",
        "Layers": [
          {
            "Ref": "parseChaseEmailDependencies"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseChaseEmailDependencies": {
      "Properties": {
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": "lambda_functions/parseChaseEmail/dependencies/"
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "parseCitiEmail": {
      "Properties": {
        "Code": "lambda_functions/parseCitiEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseCitiEmail",
        "Handler": "parseCitiEmail.lambda_handler",
        "Layers": [
          {
            "Ref": "parseCitiEmailDependencies"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseCitiEmailDependencies": {
      "Properties": {
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": "lambda_functions/parseCitiEmail/dependencies/"
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "parseDiscoverEmail": {
      "Properties": {
        "Code": "lambda_functions/parseDiscoverEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseDiscoverEmail",
        "Handler": "parseDiscoverEmail.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseUSBankEmail": {
      "Properties": {
        "Code": "lambda_functions/parseUSBankEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseUSBankEmail",
        "Handler": "parseUSBankEmail.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseWellsFargoEmail": {
      "Properties": {
        "Code": "lambda_functions/parseWellsFargoEmail/function/",
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "transactionEmails"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "parseWellsFargoEmail",
        "Handler": "parseWellsFargoEmail.lambda_handler",
        "Layers": [
          {
            "Ref": "parseWellsFargoEmailDependencies"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "transactionEmailParser",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 1
      },
      "Type": "AWS::Lambda::Function"
    },
    "parseWellsFargoEmailDependencies": {
      "Properties": {
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": "lambda_functions/parseWellsFargoEmail/dependencies/"
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "postToYnab": {
      "Properties": {
        "Code": "lambda_functions/postToYnab/function/",
        "Environment": {
          "Variables": {
            "budget_id": {
              "Ref": "BudgetId"
            },
            "personal_access_token": {
              "Ref": "PersonalAccessToken"
            },
            "table_name": {
              "Ref": "transactionData"
            }
          }
        },
        "FunctionName": "postToYnab",
        "Handler": "postToYnab.lambda_handler",
        "Layers": [
          {
            "Ref": "postToYnabDependencies"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "transactionPoster",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Timeout": 10
      },
      "Type": "AWS::Lambda::Function"
    },
    "postToYnabDependencies": {
      "Properties": {
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": "lambda_functions/postToYnab/dependencies/"
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "saveEmail": {
      "Properties": {
        "Rule": {
          "Actions": [
            {
              "S3Action": {
                "BucketName": {
                  "Ref": "transactionEmails"
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "save-email",
          "Recipients": [
            {
              "Ref": "Domain"
            }
          ]
        },
        "RuleSetName": {
          "Ref": "liveImportForYnabRuleSet"
        }
      },
      "Type": "AWS::SES::ReceiptRule"
    },
    "transactionData": {
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "message_id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "message_id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "TableName": "transactions",
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true
        }
      },
      "Type": "AWS::DynamoDB::Table"
    },
    "transactionEmailParser": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:PutItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "transactionData",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "TransactionsDBPut"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "transactionEmails",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "TransactionEmailsGet"
          }
        ],
        "RoleName": "transactionEmailParser"
      },
      "Type": "AWS::IAM::Role"
    },
    "transactionEmails": {
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "ynab-transaction-emails-",
              {
                "Ref": "BudgetId"
              }
            ]
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 30,
              "Status": "Enabled"
            }
          ]
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "transactionPoster": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "transactionData",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "TransactionsDBGet"
          }
        ],
        "RoleName": "transactionPoster"
      },
      "Type": "AWS::IAM::Role"
    },
    "transactionStreamToLambda": {
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "transactionData",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Ref": "postToYnab"
        },
        "StartingPosition": "LATEST"
      },
      "Type": "AWS::Lambda::EventSourceMapping"
    }
  }
}
